syntax = "proto3";
package customer_ui_api;

//protoc -I customer_grpc_ui_api --go_out=plugins=grpc:customer_grpc_ui_api customer_grpc_ui_api/customer_ui_api.proto

// Parameter used for Empty inputs
message EmptyParameter {
}

// Ack/Nack- Response message with comment
message AckNackResponse {
    bool acknack = 1; // True=Ack, False=Nack
    string comments = 2; //Comments if needed
}

// The Client register service definition.
// ***********************
service Customer_UI {

    //Ask taxi for Price
    rpc AskTaxiForPrice (EmptyParameter) returns (Price_UI) {
    }

    //Accept price from Taxi
    rpc AcceptPrice (EmptyParameter) returns (AckNackResponse) {
    }

    //Halt payment of incoming paymentRequests
    rpc HaltPayments (HaltPaymentRequest) returns (AckNackResponse) {
    }

    //Leave Taxi
    rpc LeaveTaxi (EmptyParameter) returns (AckNackResponse) {
    }

}


enum PriceUnit {
    SatoshiPerSecond = 0;
}

enum TimeUnit {
    SecondsBetweenPaymentmentRequests = 0;
    MilliSecondsBetweenPaymentmentRequests = 1;
}


message HaltPaymentRequest {
    bool haltpayment = 1;
}

message Price_UI {
    bool acknack = 1; // True=Ack, False=Nack
    string comments = 2; //Comments if needed
    int64 speed_amount_satoshi = 3;
    int64 acceleration_amount_satoshi = 4;
    int64 time_amount_satoshi = 5;
    float speed_amount_sek = 6;
    float acceleration_amount_sek = 7;
    float time_amount_sek = 8;
    TimeUnit timeunit = 9;
    int32 paymentRequestInterval = 10;
    PriceUnit priceunit = 11;
}

