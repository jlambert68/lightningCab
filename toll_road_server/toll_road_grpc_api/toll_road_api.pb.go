// Code generated by protoc-gen-go. DO NOT EDIT.
// source: toll_road_api.proto

/*
Package toll_road_grpc_api is a generated protocol buffer package.

It is generated from these files:
	toll_road_api.proto

It has these top-level messages:
	EmptyParameter
	AckNackResponse
	PaymentRequestMessage
	Enviroment
*/
package toll_road_grpc_api

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type TestOrProdEnviroment int32

const (
	TestOrProdEnviroment_Test       TestOrProdEnviroment = 0
	TestOrProdEnviroment_Production TestOrProdEnviroment = 1
)

var TestOrProdEnviroment_name = map[int32]string{
	0: "Test",
	1: "Production",
}
var TestOrProdEnviroment_value = map[string]int32{
	"Test":       0,
	"Production": 1,
}

func (x TestOrProdEnviroment) String() string {
	return proto.EnumName(TestOrProdEnviroment_name, int32(x))
}
func (TestOrProdEnviroment) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

// Parameter used for Empty inputs
type EmptyParameter struct {
}

func (m *EmptyParameter) Reset()                    { *m = EmptyParameter{} }
func (m *EmptyParameter) String() string            { return proto.CompactTextString(m) }
func (*EmptyParameter) ProtoMessage()               {}
func (*EmptyParameter) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

// Ack/Nack- Response message with comment
type AckNackResponse struct {
	Acknack  bool   `protobuf:"varint,1,opt,name=acknack" json:"acknack,omitempty"`
	Comments string `protobuf:"bytes,2,opt,name=comments" json:"comments,omitempty"`
}

func (m *AckNackResponse) Reset()                    { *m = AckNackResponse{} }
func (m *AckNackResponse) String() string            { return proto.CompactTextString(m) }
func (*AckNackResponse) ProtoMessage()               {}
func (*AckNackResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *AckNackResponse) GetAcknack() bool {
	if m != nil {
		return m.Acknack
	}
	return false
}

func (m *AckNackResponse) GetComments() string {
	if m != nil {
		return m.Comments
	}
	return ""
}

type PaymentRequestMessage struct {
	Acknack        bool   `protobuf:"varint,1,opt,name=acknack" json:"acknack,omitempty"`
	PaymentRequest string `protobuf:"bytes,2,opt,name=PaymentRequest" json:"PaymentRequest,omitempty"`
	ReturnMessage  string `protobuf:"bytes,3,opt,name=returnMessage" json:"returnMessage,omitempty"`
}

func (m *PaymentRequestMessage) Reset()                    { *m = PaymentRequestMessage{} }
func (m *PaymentRequestMessage) String() string            { return proto.CompactTextString(m) }
func (*PaymentRequestMessage) ProtoMessage()               {}
func (*PaymentRequestMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *PaymentRequestMessage) GetAcknack() bool {
	if m != nil {
		return m.Acknack
	}
	return false
}

func (m *PaymentRequestMessage) GetPaymentRequest() string {
	if m != nil {
		return m.PaymentRequest
	}
	return ""
}

func (m *PaymentRequestMessage) GetReturnMessage() string {
	if m != nil {
		return m.ReturnMessage
	}
	return ""
}

type Enviroment struct {
	TestOrProduction TestOrProdEnviroment `protobuf:"varint,1,opt,name=TestOrProduction,enum=toll_road_grpc_api.TestOrProdEnviroment" json:"TestOrProduction,omitempty"`
}

func (m *Enviroment) Reset()                    { *m = Enviroment{} }
func (m *Enviroment) String() string            { return proto.CompactTextString(m) }
func (*Enviroment) ProtoMessage()               {}
func (*Enviroment) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *Enviroment) GetTestOrProduction() TestOrProdEnviroment {
	if m != nil {
		return m.TestOrProduction
	}
	return TestOrProdEnviroment_Test
}

func init() {
	proto.RegisterType((*EmptyParameter)(nil), "toll_road_grpc_api.EmptyParameter")
	proto.RegisterType((*AckNackResponse)(nil), "toll_road_grpc_api.AckNackResponse")
	proto.RegisterType((*PaymentRequestMessage)(nil), "toll_road_grpc_api.PaymentRequestMessage")
	proto.RegisterType((*Enviroment)(nil), "toll_road_grpc_api.Enviroment")
	proto.RegisterEnum("toll_road_grpc_api.TestOrProdEnviroment", TestOrProdEnviroment_name, TestOrProdEnviroment_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for TollRoadServer service

type TollRoadServerClient interface {
	// Taxi ask for PaymentRequest
	GetPaymentRequest(ctx context.Context, in *Enviroment, opts ...grpc.CallOption) (*PaymentRequestMessage, error)
}

type tollRoadServerClient struct {
	cc *grpc.ClientConn
}

func NewTollRoadServerClient(cc *grpc.ClientConn) TollRoadServerClient {
	return &tollRoadServerClient{cc}
}

func (c *tollRoadServerClient) GetPaymentRequest(ctx context.Context, in *Enviroment, opts ...grpc.CallOption) (*PaymentRequestMessage, error) {
	out := new(PaymentRequestMessage)
	err := grpc.Invoke(ctx, "/toll_road_grpc_api.TollRoadServer/GetPaymentRequest", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for TollRoadServer service

type TollRoadServerServer interface {
	// Taxi ask for PaymentRequest
	GetPaymentRequest(context.Context, *Enviroment) (*PaymentRequestMessage, error)
}

func RegisterTollRoadServerServer(s *grpc.Server, srv TollRoadServerServer) {
	s.RegisterService(&_TollRoadServer_serviceDesc, srv)
}

func _TollRoadServer_GetPaymentRequest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Enviroment)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TollRoadServerServer).GetPaymentRequest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/toll_road_grpc_api.TollRoadServer/GetPaymentRequest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TollRoadServerServer).GetPaymentRequest(ctx, req.(*Enviroment))
	}
	return interceptor(ctx, in, info, handler)
}

var _TollRoadServer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "toll_road_grpc_api.TollRoadServer",
	HandlerType: (*TollRoadServerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetPaymentRequest",
			Handler:    _TollRoadServer_GetPaymentRequest_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "toll_road_api.proto",
}

func init() { proto.RegisterFile("toll_road_api.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 289 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x92, 0x41, 0x4b, 0xfb, 0x40,
	0x10, 0xc5, 0x9b, 0xff, 0x5f, 0x34, 0x0e, 0x18, 0xe3, 0xaa, 0x10, 0x7a, 0x90, 0x12, 0x44, 0xa2,
	0x87, 0x20, 0xf5, 0x13, 0x78, 0x28, 0x3d, 0xa9, 0x61, 0xcd, 0xbd, 0x6e, 0x37, 0x43, 0x09, 0x49,
	0x76, 0xe3, 0xec, 0xa6, 0xd0, 0x93, 0x5f, 0x5d, 0x12, 0xaa, 0xa1, 0x6d, 0xf0, 0xb6, 0xf3, 0xe6,
	0xcd, 0x6f, 0x76, 0x1f, 0x0b, 0x97, 0x56, 0x97, 0xe5, 0x82, 0xb4, 0xc8, 0x16, 0xa2, 0xce, 0xe3,
	0x9a, 0xb4, 0xd5, 0x8c, 0xf5, 0xe2, 0x8a, 0x6a, 0xd9, 0x76, 0x42, 0x1f, 0xbc, 0x59, 0x55, 0xdb,
	0x4d, 0x22, 0x48, 0x54, 0x68, 0x91, 0xc2, 0x39, 0x9c, 0x3f, 0xcb, 0xe2, 0x55, 0xc8, 0x82, 0xa3,
	0xa9, 0xb5, 0x32, 0xc8, 0x02, 0x38, 0x11, 0xb2, 0x50, 0x42, 0x16, 0x81, 0x33, 0x71, 0x22, 0x97,
	0xff, 0x94, 0x6c, 0x0c, 0xae, 0xd4, 0x55, 0x85, 0xca, 0x9a, 0xe0, 0xdf, 0xc4, 0x89, 0x4e, 0xf9,
	0x6f, 0x1d, 0x7e, 0xc1, 0x75, 0x22, 0x36, 0xed, 0x99, 0xe3, 0x67, 0x83, 0xc6, 0xbe, 0xa0, 0x31,
	0x62, 0xf5, 0x17, 0xee, 0x0e, 0xbc, 0xdd, 0x91, 0x2d, 0x74, 0x4f, 0x65, 0xb7, 0x70, 0x46, 0x68,
	0x1b, 0x52, 0x5b, 0x64, 0xf0, 0xbf, 0xb3, 0xed, 0x8a, 0xe1, 0x12, 0x60, 0xa6, 0xd6, 0x39, 0xe9,
	0x76, 0x94, 0xa5, 0xe0, 0xa7, 0x68, 0xec, 0x1b, 0x25, 0xa4, 0xb3, 0x46, 0xda, 0x5c, 0xab, 0x6e,
	0xbd, 0x37, 0x8d, 0xe2, 0xc3, 0x60, 0xe2, 0xde, 0xdb, 0x33, 0xf8, 0x01, 0xe1, 0xe1, 0x11, 0xae,
	0x86, 0x9c, 0xcc, 0x85, 0xa3, 0x56, 0xf7, 0x47, 0xcc, 0x03, 0xe8, 0xfd, 0xbe, 0x33, 0x25, 0xf0,
	0x52, 0x5d, 0x96, 0x5c, 0x8b, 0xec, 0x1d, 0x69, 0x8d, 0xc4, 0x3e, 0xe0, 0x62, 0x8e, 0x76, 0xef,
	0x89, 0x37, 0x43, 0x97, 0xea, 0x17, 0x8c, 0xef, 0x87, 0xfa, 0x83, 0x79, 0x87, 0xa3, 0xe5, 0x71,
	0xf7, 0x01, 0x9e, 0xbe, 0x03, 0x00, 0x00, 0xff, 0xff, 0xf6, 0x05, 0xf4, 0x27, 0x17, 0x02, 0x00,
	0x00,
}
