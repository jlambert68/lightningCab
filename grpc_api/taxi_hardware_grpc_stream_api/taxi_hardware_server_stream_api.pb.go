// Code generated by protoc-gen-go. DO NOT EDIT.
// source: taxi_hardware_server_stream_api.proto

package taxi_hardware_grpc_stream_api

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type TestOrProdEnviroment int32

const (
	TestOrProdEnviroment_Test       TestOrProdEnviroment = 0
	TestOrProdEnviroment_Production TestOrProdEnviroment = 1
)

var TestOrProdEnviroment_name = map[int32]string{
	0: "Test",
	1: "Production",
}
var TestOrProdEnviroment_value = map[string]int32{
	"Test":       0,
	"Production": 1,
}

func (x TestOrProdEnviroment) String() string {
	return proto.EnumName(TestOrProdEnviroment_name, int32(x))
}
func (TestOrProdEnviroment) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_taxi_hardware_server_stream_api_6b876e5d7b8e6cdc, []int{0}
}

type Enviroment struct {
	TestOrProduction     TestOrProdEnviroment `protobuf:"varint,1,opt,name=TestOrProduction,proto3,enum=taxi_hardware_grpc_stream_api.TestOrProdEnviroment" json:"TestOrProduction,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Enviroment) Reset()         { *m = Enviroment{} }
func (m *Enviroment) String() string { return proto.CompactTextString(m) }
func (*Enviroment) ProtoMessage()    {}
func (*Enviroment) Descriptor() ([]byte, []int) {
	return fileDescriptor_taxi_hardware_server_stream_api_6b876e5d7b8e6cdc, []int{0}
}
func (m *Enviroment) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Enviroment.Unmarshal(m, b)
}
func (m *Enviroment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Enviroment.Marshal(b, m, deterministic)
}
func (dst *Enviroment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Enviroment.Merge(dst, src)
}
func (m *Enviroment) XXX_Size() int {
	return xxx_messageInfo_Enviroment.Size(m)
}
func (m *Enviroment) XXX_DiscardUnknown() {
	xxx_messageInfo_Enviroment.DiscardUnknown(m)
}

var xxx_messageInfo_Enviroment proto.InternalMessageInfo

func (m *Enviroment) GetTestOrProduction() TestOrProdEnviroment {
	if m != nil {
		return m.TestOrProduction
	}
	return TestOrProdEnviroment_Test
}

type MessasurePowerMessage struct {
	TollGateServoEnviroment TestOrProdEnviroment `protobuf:"varint,1,opt,name=tollGateServoEnviroment,proto3,enum=taxi_hardware_grpc_stream_api.TestOrProdEnviroment" json:"tollGateServoEnviroment,omitempty"`
	Intervall               int32                `protobuf:"varint,2,opt,name=intervall,proto3" json:"intervall,omitempty"`
	XXX_NoUnkeyedLiteral    struct{}             `json:"-"`
	XXX_unrecognized        []byte               `json:"-"`
	XXX_sizecache           int32                `json:"-"`
}

func (m *MessasurePowerMessage) Reset()         { *m = MessasurePowerMessage{} }
func (m *MessasurePowerMessage) String() string { return proto.CompactTextString(m) }
func (*MessasurePowerMessage) ProtoMessage()    {}
func (*MessasurePowerMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_taxi_hardware_server_stream_api_6b876e5d7b8e6cdc, []int{1}
}
func (m *MessasurePowerMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MessasurePowerMessage.Unmarshal(m, b)
}
func (m *MessasurePowerMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MessasurePowerMessage.Marshal(b, m, deterministic)
}
func (dst *MessasurePowerMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MessasurePowerMessage.Merge(dst, src)
}
func (m *MessasurePowerMessage) XXX_Size() int {
	return xxx_messageInfo_MessasurePowerMessage.Size(m)
}
func (m *MessasurePowerMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_MessasurePowerMessage.DiscardUnknown(m)
}

var xxx_messageInfo_MessasurePowerMessage proto.InternalMessageInfo

func (m *MessasurePowerMessage) GetTollGateServoEnviroment() TestOrProdEnviroment {
	if m != nil {
		return m.TollGateServoEnviroment
	}
	return TestOrProdEnviroment_Test
}

func (m *MessasurePowerMessage) GetIntervall() int32 {
	if m != nil {
		return m.Intervall
	}
	return 0
}

type PowerStatusResponse struct {
	Acknack              bool     `protobuf:"varint,1,opt,name=acknack,proto3" json:"acknack,omitempty"`
	Comments             string   `protobuf:"bytes,2,opt,name=comments,proto3" json:"comments,omitempty"`
	Speed                int32    `protobuf:"varint,3,opt,name=speed,proto3" json:"speed,omitempty"`
	Acceleration         int32    `protobuf:"varint,4,opt,name=acceleration,proto3" json:"acceleration,omitempty"`
	Timestamp            int64    `protobuf:"varint,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PowerStatusResponse) Reset()         { *m = PowerStatusResponse{} }
func (m *PowerStatusResponse) String() string { return proto.CompactTextString(m) }
func (*PowerStatusResponse) ProtoMessage()    {}
func (*PowerStatusResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_taxi_hardware_server_stream_api_6b876e5d7b8e6cdc, []int{2}
}
func (m *PowerStatusResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PowerStatusResponse.Unmarshal(m, b)
}
func (m *PowerStatusResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PowerStatusResponse.Marshal(b, m, deterministic)
}
func (dst *PowerStatusResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PowerStatusResponse.Merge(dst, src)
}
func (m *PowerStatusResponse) XXX_Size() int {
	return xxx_messageInfo_PowerStatusResponse.Size(m)
}
func (m *PowerStatusResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PowerStatusResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PowerStatusResponse proto.InternalMessageInfo

func (m *PowerStatusResponse) GetAcknack() bool {
	if m != nil {
		return m.Acknack
	}
	return false
}

func (m *PowerStatusResponse) GetComments() string {
	if m != nil {
		return m.Comments
	}
	return ""
}

func (m *PowerStatusResponse) GetSpeed() int32 {
	if m != nil {
		return m.Speed
	}
	return 0
}

func (m *PowerStatusResponse) GetAcceleration() int32 {
	if m != nil {
		return m.Acceleration
	}
	return 0
}

func (m *PowerStatusResponse) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func init() {
	proto.RegisterType((*Enviroment)(nil), "taxi_hardware_grpc_stream_api.Enviroment")
	proto.RegisterType((*MessasurePowerMessage)(nil), "taxi_hardware_grpc_stream_api.MessasurePowerMessage")
	proto.RegisterType((*PowerStatusResponse)(nil), "taxi_hardware_grpc_stream_api.PowerStatusResponse")
	proto.RegisterEnum("taxi_hardware_grpc_stream_api.TestOrProdEnviroment", TestOrProdEnviroment_name, TestOrProdEnviroment_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TaxiStreamHardwareClient is the client API for TaxiStreamHardware service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TaxiStreamHardwareClient interface {
	// Returns a stream with
	MessasurePowerConsumption(ctx context.Context, in *MessasurePowerMessage, opts ...grpc.CallOption) (TaxiStreamHardware_MessasurePowerConsumptionClient, error)
}

type taxiStreamHardwareClient struct {
	cc *grpc.ClientConn
}

func NewTaxiStreamHardwareClient(cc *grpc.ClientConn) TaxiStreamHardwareClient {
	return &taxiStreamHardwareClient{cc}
}

func (c *taxiStreamHardwareClient) MessasurePowerConsumption(ctx context.Context, in *MessasurePowerMessage, opts ...grpc.CallOption) (TaxiStreamHardware_MessasurePowerConsumptionClient, error) {
	stream, err := c.cc.NewStream(ctx, &_TaxiStreamHardware_serviceDesc.Streams[0], "/taxi_hardware_grpc_stream_api.TaxiStreamHardware/MessasurePowerConsumption", opts...)
	if err != nil {
		return nil, err
	}
	x := &taxiStreamHardwareMessasurePowerConsumptionClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type TaxiStreamHardware_MessasurePowerConsumptionClient interface {
	Recv() (*PowerStatusResponse, error)
	grpc.ClientStream
}

type taxiStreamHardwareMessasurePowerConsumptionClient struct {
	grpc.ClientStream
}

func (x *taxiStreamHardwareMessasurePowerConsumptionClient) Recv() (*PowerStatusResponse, error) {
	m := new(PowerStatusResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// TaxiStreamHardwareServer is the server API for TaxiStreamHardware service.
type TaxiStreamHardwareServer interface {
	// Returns a stream with
	MessasurePowerConsumption(*MessasurePowerMessage, TaxiStreamHardware_MessasurePowerConsumptionServer) error
}

func RegisterTaxiStreamHardwareServer(s *grpc.Server, srv TaxiStreamHardwareServer) {
	s.RegisterService(&_TaxiStreamHardware_serviceDesc, srv)
}

func _TaxiStreamHardware_MessasurePowerConsumption_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(MessasurePowerMessage)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(TaxiStreamHardwareServer).MessasurePowerConsumption(m, &taxiStreamHardwareMessasurePowerConsumptionServer{stream})
}

type TaxiStreamHardware_MessasurePowerConsumptionServer interface {
	Send(*PowerStatusResponse) error
	grpc.ServerStream
}

type taxiStreamHardwareMessasurePowerConsumptionServer struct {
	grpc.ServerStream
}

func (x *taxiStreamHardwareMessasurePowerConsumptionServer) Send(m *PowerStatusResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _TaxiStreamHardware_serviceDesc = grpc.ServiceDesc{
	ServiceName: "taxi_hardware_grpc_stream_api.TaxiStreamHardware",
	HandlerType: (*TaxiStreamHardwareServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "MessasurePowerConsumption",
			Handler:       _TaxiStreamHardware_MessasurePowerConsumption_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "taxi_hardware_server_stream_api.proto",
}

func init() {
	proto.RegisterFile("taxi_hardware_server_stream_api.proto", fileDescriptor_taxi_hardware_server_stream_api_6b876e5d7b8e6cdc)
}

var fileDescriptor_taxi_hardware_server_stream_api_6b876e5d7b8e6cdc = []byte{
	// 356 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x92, 0xdf, 0x6a, 0xea, 0x40,
	0x10, 0xc6, 0xdd, 0xa3, 0x9e, 0xa3, 0xc3, 0x41, 0x64, 0x8f, 0x87, 0xa6, 0xd2, 0x82, 0x04, 0x0a,
	0xd2, 0x0b, 0x11, 0xed, 0x1b, 0x94, 0xd2, 0xde, 0x94, 0x4a, 0xf4, 0x3e, 0x4c, 0xe3, 0x60, 0x83,
	0xd9, 0x6c, 0x98, 0xdd, 0x44, 0x5f, 0xa1, 0x6f, 0x51, 0x68, 0x1f, 0xb4, 0xb8, 0xfd, 0x93, 0x4a,
	0x6d, 0xbd, 0xe8, 0xe5, 0xf7, 0x65, 0xe6, 0x97, 0x2f, 0xdf, 0x04, 0x4e, 0x2c, 0xae, 0xe3, 0xf0,
	0x0e, 0x79, 0xbe, 0x42, 0xa6, 0xd0, 0x10, 0x17, 0xc4, 0xa1, 0xb1, 0x4c, 0xa8, 0x42, 0xcc, 0xe2,
	0x41, 0xc6, 0xda, 0x6a, 0x79, 0xbc, 0x3d, 0xb6, 0xe0, 0x2c, 0xfa, 0x30, 0xe4, 0x2b, 0x80, 0x8b,
	0xb4, 0x88, 0x59, 0x2b, 0x4a, 0xad, 0x0c, 0xa1, 0x3d, 0x23, 0x63, 0x6f, 0x78, 0xc2, 0x7a, 0x9e,
	0x47, 0x36, 0xd6, 0xa9, 0x27, 0x7a, 0xa2, 0xdf, 0x1a, 0x8d, 0x07, 0xdf, 0x72, 0x06, 0xe5, 0x5a,
	0x89, 0x0b, 0x3e, 0xc1, 0xfc, 0x27, 0x01, 0xff, 0xaf, 0xc9, 0x18, 0x34, 0x39, 0xd3, 0x44, 0xaf,
	0x88, 0x9d, 0x5a, 0x90, 0x54, 0x70, 0x60, 0x75, 0x92, 0x5c, 0xa2, 0xa5, 0x29, 0x71, 0xa1, 0x4b,
	0xcc, 0x4f, 0x12, 0x7c, 0xc5, 0x94, 0x47, 0xd0, 0x8c, 0x53, 0x4b, 0x5c, 0x60, 0x92, 0x78, 0xbf,
	0x7a, 0xa2, 0x5f, 0x0f, 0x4a, 0xc3, 0x7f, 0x14, 0xf0, 0xcf, 0xa5, 0x9b, 0x5a, 0xb4, 0xb9, 0x09,
	0xc8, 0x64, 0x3a, 0x35, 0x24, 0x3d, 0xf8, 0x83, 0xd1, 0x32, 0xc5, 0x68, 0xe9, 0x42, 0x35, 0x82,
	0x37, 0x29, 0xbb, 0xd0, 0x88, 0xb4, 0xda, 0xa0, 0x8d, 0xc3, 0x35, 0x83, 0x77, 0x2d, 0x3b, 0x50,
	0x37, 0x19, 0xd1, 0xdc, 0xab, 0xba, 0xf7, 0xbc, 0x08, 0xe9, 0xc3, 0x5f, 0x8c, 0x22, 0x4a, 0x88,
	0xd1, 0xf5, 0x5c, 0x73, 0x0f, 0xb7, 0xbc, 0x4d, 0x4a, 0x1b, 0x2b, 0x32, 0x16, 0x55, 0xe6, 0xd5,
	0x7b, 0xa2, 0x5f, 0x0d, 0x4a, 0xe3, 0x74, 0x08, 0x9d, 0x5d, 0x1f, 0x2d, 0x1b, 0x50, 0xdb, 0xf8,
	0xed, 0x8a, 0x6c, 0x01, 0x94, 0xe5, 0xb7, 0xc5, 0xe8, 0x41, 0x80, 0x9c, 0xe1, 0x3a, 0x9e, 0xba,
	0xda, 0xae, 0x5e, 0xab, 0x94, 0xf7, 0x02, 0x0e, 0xb7, 0xaf, 0x72, 0xae, 0x53, 0x93, 0xab, 0xcc,
	0x85, 0x38, 0xdb, 0x53, 0xfc, 0xce, 0x7b, 0x76, 0x47, 0x7b, 0xb6, 0x76, 0xd4, 0xeb, 0x57, 0x86,
	0xe2, 0xf6, 0xb7, 0xfb, 0x6d, 0xc7, 0xcf, 0x01, 0x00, 0x00, 0xff, 0xff, 0x86, 0xf7, 0x7f, 0x5c,
	0xdf, 0x02, 0x00, 0x00,
}
