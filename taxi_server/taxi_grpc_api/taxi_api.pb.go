// Code generated by protoc-gen-go. DO NOT EDIT.
// source: taxi_api.proto

package taxi_grpc_api

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type TestOrProdEnviroment int32

const (
	TestOrProdEnviroment_Test       TestOrProdEnviroment = 0
	TestOrProdEnviroment_Production TestOrProdEnviroment = 1
)

var TestOrProdEnviroment_name = map[int32]string{
	0: "Test",
	1: "Production",
}
var TestOrProdEnviroment_value = map[string]int32{
	"Test":       0,
	"Production": 1,
}

func (x TestOrProdEnviroment) String() string {
	return proto.EnumName(TestOrProdEnviroment_name, int32(x))
}
func (TestOrProdEnviroment) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_taxi_api_73c5d8ff1f7b6cda, []int{0}
}

type PriceUnit int32

const (
	PriceUnit_SatoshiPerSecond PriceUnit = 0
)

var PriceUnit_name = map[int32]string{
	0: "SatoshiPerSecond",
}
var PriceUnit_value = map[string]int32{
	"SatoshiPerSecond": 0,
}

func (x PriceUnit) String() string {
	return proto.EnumName(PriceUnit_name, int32(x))
}
func (PriceUnit) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_taxi_api_73c5d8ff1f7b6cda, []int{1}
}

type TimeUnit int32

const (
	TimeUnit_SecondsBetweenPaymentmentRequests      TimeUnit = 0
	TimeUnit_MilliSecondsBetweenPaymentmentRequests TimeUnit = 1
)

var TimeUnit_name = map[int32]string{
	0: "SecondsBetweenPaymentmentRequests",
	1: "MilliSecondsBetweenPaymentmentRequests",
}
var TimeUnit_value = map[string]int32{
	"SecondsBetweenPaymentmentRequests":      0,
	"MilliSecondsBetweenPaymentmentRequests": 1,
}

func (x TimeUnit) String() string {
	return proto.EnumName(TimeUnit_name, int32(x))
}
func (TimeUnit) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_taxi_api_73c5d8ff1f7b6cda, []int{2}
}

// Parameter used for Empty inputs
type EmptyParameter struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EmptyParameter) Reset()         { *m = EmptyParameter{} }
func (m *EmptyParameter) String() string { return proto.CompactTextString(m) }
func (*EmptyParameter) ProtoMessage()    {}
func (*EmptyParameter) Descriptor() ([]byte, []int) {
	return fileDescriptor_taxi_api_73c5d8ff1f7b6cda, []int{0}
}
func (m *EmptyParameter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EmptyParameter.Unmarshal(m, b)
}
func (m *EmptyParameter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EmptyParameter.Marshal(b, m, deterministic)
}
func (dst *EmptyParameter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmptyParameter.Merge(dst, src)
}
func (m *EmptyParameter) XXX_Size() int {
	return xxx_messageInfo_EmptyParameter.Size(m)
}
func (m *EmptyParameter) XXX_DiscardUnknown() {
	xxx_messageInfo_EmptyParameter.DiscardUnknown(m)
}

var xxx_messageInfo_EmptyParameter proto.InternalMessageInfo

// Ack/Nack- Response message with comment
type AckNackResponse struct {
	Acknack              bool     `protobuf:"varint,1,opt,name=acknack" json:"acknack,omitempty"`
	Comments             string   `protobuf:"bytes,2,opt,name=comments" json:"comments,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AckNackResponse) Reset()         { *m = AckNackResponse{} }
func (m *AckNackResponse) String() string { return proto.CompactTextString(m) }
func (*AckNackResponse) ProtoMessage()    {}
func (*AckNackResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_taxi_api_73c5d8ff1f7b6cda, []int{1}
}
func (m *AckNackResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AckNackResponse.Unmarshal(m, b)
}
func (m *AckNackResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AckNackResponse.Marshal(b, m, deterministic)
}
func (dst *AckNackResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AckNackResponse.Merge(dst, src)
}
func (m *AckNackResponse) XXX_Size() int {
	return xxx_messageInfo_AckNackResponse.Size(m)
}
func (m *AckNackResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AckNackResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AckNackResponse proto.InternalMessageInfo

func (m *AckNackResponse) GetAcknack() bool {
	if m != nil {
		return m.Acknack
	}
	return false
}

func (m *AckNackResponse) GetComments() string {
	if m != nil {
		return m.Comments
	}
	return ""
}

type Enviroment struct {
	TestOrProduction     TestOrProdEnviroment `protobuf:"varint,1,opt,name=TestOrProduction,enum=taxi_grpc_api.TestOrProdEnviroment" json:"TestOrProduction,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Enviroment) Reset()         { *m = Enviroment{} }
func (m *Enviroment) String() string { return proto.CompactTextString(m) }
func (*Enviroment) ProtoMessage()    {}
func (*Enviroment) Descriptor() ([]byte, []int) {
	return fileDescriptor_taxi_api_73c5d8ff1f7b6cda, []int{2}
}
func (m *Enviroment) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Enviroment.Unmarshal(m, b)
}
func (m *Enviroment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Enviroment.Marshal(b, m, deterministic)
}
func (dst *Enviroment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Enviroment.Merge(dst, src)
}
func (m *Enviroment) XXX_Size() int {
	return xxx_messageInfo_Enviroment.Size(m)
}
func (m *Enviroment) XXX_DiscardUnknown() {
	xxx_messageInfo_Enviroment.DiscardUnknown(m)
}

var xxx_messageInfo_Enviroment proto.InternalMessageInfo

func (m *Enviroment) GetTestOrProduction() TestOrProdEnviroment {
	if m != nil {
		return m.TestOrProduction
	}
	return TestOrProdEnviroment_Test
}

type PaymentRequest struct {
	LightningPaymentRequest   string   `protobuf:"bytes,1,opt,name=lightningPaymentRequest" json:"lightningPaymentRequest,omitempty"`
	SpeedAmountSatoshi        int64    `protobuf:"varint,2,opt,name=speed_amount_satoshi,json=speedAmountSatoshi" json:"speed_amount_satoshi,omitempty"`
	AccelerationAmountSatoshi int64    `protobuf:"varint,3,opt,name=acceleration_amount_satoshi,json=accelerationAmountSatoshi" json:"acceleration_amount_satoshi,omitempty"`
	TimeAmountSatoshi         int64    `protobuf:"varint,4,opt,name=time_amount_satoshi,json=timeAmountSatoshi" json:"time_amount_satoshi,omitempty"`
	SpeedAmountSek            float32  `protobuf:"fixed32,5,opt,name=speed_amount_sek,json=speedAmountSek" json:"speed_amount_sek,omitempty"`
	AccelerationAmountSek     float32  `protobuf:"fixed32,6,opt,name=acceleration_amount_sek,json=accelerationAmountSek" json:"acceleration_amount_sek,omitempty"`
	TimeAmountSek             float32  `protobuf:"fixed32,7,opt,name=time_amount_sek,json=timeAmountSek" json:"time_amount_sek,omitempty"`
	TotalAmountSatoshi        int64    `protobuf:"varint,8,opt,name=total_amount_satoshi,json=totalAmountSatoshi" json:"total_amount_satoshi,omitempty"`
	TotalAmountSek            float32  `protobuf:"fixed32,9,opt,name=total_amount_sek,json=totalAmountSek" json:"total_amount_sek,omitempty"`
	SpeedPercent              int32    `protobuf:"varint,10,opt,name=speed_percent,json=speedPercent" json:"speed_percent,omitempty"`
	AccelerationPercent       int32    `protobuf:"varint,11,opt,name=acceleration_percent,json=accelerationPercent" json:"acceleration_percent,omitempty"`
	XXX_NoUnkeyedLiteral      struct{} `json:"-"`
	XXX_unrecognized          []byte   `json:"-"`
	XXX_sizecache             int32    `json:"-"`
}

func (m *PaymentRequest) Reset()         { *m = PaymentRequest{} }
func (m *PaymentRequest) String() string { return proto.CompactTextString(m) }
func (*PaymentRequest) ProtoMessage()    {}
func (*PaymentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_taxi_api_73c5d8ff1f7b6cda, []int{3}
}
func (m *PaymentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PaymentRequest.Unmarshal(m, b)
}
func (m *PaymentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PaymentRequest.Marshal(b, m, deterministic)
}
func (dst *PaymentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PaymentRequest.Merge(dst, src)
}
func (m *PaymentRequest) XXX_Size() int {
	return xxx_messageInfo_PaymentRequest.Size(m)
}
func (m *PaymentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PaymentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PaymentRequest proto.InternalMessageInfo

func (m *PaymentRequest) GetLightningPaymentRequest() string {
	if m != nil {
		return m.LightningPaymentRequest
	}
	return ""
}

func (m *PaymentRequest) GetSpeedAmountSatoshi() int64 {
	if m != nil {
		return m.SpeedAmountSatoshi
	}
	return 0
}

func (m *PaymentRequest) GetAccelerationAmountSatoshi() int64 {
	if m != nil {
		return m.AccelerationAmountSatoshi
	}
	return 0
}

func (m *PaymentRequest) GetTimeAmountSatoshi() int64 {
	if m != nil {
		return m.TimeAmountSatoshi
	}
	return 0
}

func (m *PaymentRequest) GetSpeedAmountSek() float32 {
	if m != nil {
		return m.SpeedAmountSek
	}
	return 0
}

func (m *PaymentRequest) GetAccelerationAmountSek() float32 {
	if m != nil {
		return m.AccelerationAmountSek
	}
	return 0
}

func (m *PaymentRequest) GetTimeAmountSek() float32 {
	if m != nil {
		return m.TimeAmountSek
	}
	return 0
}

func (m *PaymentRequest) GetTotalAmountSatoshi() int64 {
	if m != nil {
		return m.TotalAmountSatoshi
	}
	return 0
}

func (m *PaymentRequest) GetTotalAmountSek() float32 {
	if m != nil {
		return m.TotalAmountSek
	}
	return 0
}

func (m *PaymentRequest) GetSpeedPercent() int32 {
	if m != nil {
		return m.SpeedPercent
	}
	return 0
}

func (m *PaymentRequest) GetAccelerationPercent() int32 {
	if m != nil {
		return m.AccelerationPercent
	}
	return 0
}

type Price struct {
	Acknack                bool      `protobuf:"varint,1,opt,name=acknack" json:"acknack,omitempty"`
	Comments               string    `protobuf:"bytes,2,opt,name=comments" json:"comments,omitempty"`
	Speed                  int64     `protobuf:"varint,3,opt,name=speed" json:"speed,omitempty"`
	Acceleration           int64     `protobuf:"varint,4,opt,name=acceleration" json:"acceleration,omitempty"`
	Time                   int64     `protobuf:"varint,5,opt,name=time" json:"time,omitempty"`
	Timeunit               TimeUnit  `protobuf:"varint,6,opt,name=timeunit,enum=taxi_grpc_api.TimeUnit" json:"timeunit,omitempty"`
	PaymentRequestInterval int32     `protobuf:"varint,7,opt,name=paymentRequestInterval" json:"paymentRequestInterval,omitempty"`
	Priceunit              PriceUnit `protobuf:"varint,8,opt,name=priceunit,enum=taxi_grpc_api.PriceUnit" json:"priceunit,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}  `json:"-"`
	XXX_unrecognized       []byte    `json:"-"`
	XXX_sizecache          int32     `json:"-"`
}

func (m *Price) Reset()         { *m = Price{} }
func (m *Price) String() string { return proto.CompactTextString(m) }
func (*Price) ProtoMessage()    {}
func (*Price) Descriptor() ([]byte, []int) {
	return fileDescriptor_taxi_api_73c5d8ff1f7b6cda, []int{4}
}
func (m *Price) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Price.Unmarshal(m, b)
}
func (m *Price) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Price.Marshal(b, m, deterministic)
}
func (dst *Price) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Price.Merge(dst, src)
}
func (m *Price) XXX_Size() int {
	return xxx_messageInfo_Price.Size(m)
}
func (m *Price) XXX_DiscardUnknown() {
	xxx_messageInfo_Price.DiscardUnknown(m)
}

var xxx_messageInfo_Price proto.InternalMessageInfo

func (m *Price) GetAcknack() bool {
	if m != nil {
		return m.Acknack
	}
	return false
}

func (m *Price) GetComments() string {
	if m != nil {
		return m.Comments
	}
	return ""
}

func (m *Price) GetSpeed() int64 {
	if m != nil {
		return m.Speed
	}
	return 0
}

func (m *Price) GetAcceleration() int64 {
	if m != nil {
		return m.Acceleration
	}
	return 0
}

func (m *Price) GetTime() int64 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *Price) GetTimeunit() TimeUnit {
	if m != nil {
		return m.Timeunit
	}
	return TimeUnit_SecondsBetweenPaymentmentRequests
}

func (m *Price) GetPaymentRequestInterval() int32 {
	if m != nil {
		return m.PaymentRequestInterval
	}
	return 0
}

func (m *Price) GetPriceunit() PriceUnit {
	if m != nil {
		return m.Priceunit
	}
	return PriceUnit_SatoshiPerSecond
}

func init() {
	proto.RegisterType((*EmptyParameter)(nil), "taxi_grpc_api.EmptyParameter")
	proto.RegisterType((*AckNackResponse)(nil), "taxi_grpc_api.AckNackResponse")
	proto.RegisterType((*Enviroment)(nil), "taxi_grpc_api.Enviroment")
	proto.RegisterType((*PaymentRequest)(nil), "taxi_grpc_api.PaymentRequest")
	proto.RegisterType((*Price)(nil), "taxi_grpc_api.Price")
	proto.RegisterEnum("taxi_grpc_api.TestOrProdEnviroment", TestOrProdEnviroment_name, TestOrProdEnviroment_value)
	proto.RegisterEnum("taxi_grpc_api.PriceUnit", PriceUnit_name, PriceUnit_value)
	proto.RegisterEnum("taxi_grpc_api.TimeUnit", TimeUnit_name, TimeUnit_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Taxi service

type TaxiClient interface {
	// Ask taxi for Price
	AskTaxiForPrice(ctx context.Context, in *Enviroment, opts ...grpc.CallOption) (*Price, error)
	// Accept price from Taxi
	AcceptPrice(ctx context.Context, in *Enviroment, opts ...grpc.CallOption) (*AckNackResponse, error)
	// Returns a stream of PaymentRequests to Customer
	PaymentRequestStream(ctx context.Context, in *Enviroment, opts ...grpc.CallOption) (Taxi_PaymentRequestStreamClient, error)
}

type taxiClient struct {
	cc *grpc.ClientConn
}

func NewTaxiClient(cc *grpc.ClientConn) TaxiClient {
	return &taxiClient{cc}
}

func (c *taxiClient) AskTaxiForPrice(ctx context.Context, in *Enviroment, opts ...grpc.CallOption) (*Price, error) {
	out := new(Price)
	err := grpc.Invoke(ctx, "/taxi_grpc_api.Taxi/AskTaxiForPrice", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *taxiClient) AcceptPrice(ctx context.Context, in *Enviroment, opts ...grpc.CallOption) (*AckNackResponse, error) {
	out := new(AckNackResponse)
	err := grpc.Invoke(ctx, "/taxi_grpc_api.Taxi/AcceptPrice", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *taxiClient) PaymentRequestStream(ctx context.Context, in *Enviroment, opts ...grpc.CallOption) (Taxi_PaymentRequestStreamClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_Taxi_serviceDesc.Streams[0], c.cc, "/taxi_grpc_api.Taxi/PaymentRequestStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &taxiPaymentRequestStreamClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Taxi_PaymentRequestStreamClient interface {
	Recv() (*PaymentRequest, error)
	grpc.ClientStream
}

type taxiPaymentRequestStreamClient struct {
	grpc.ClientStream
}

func (x *taxiPaymentRequestStreamClient) Recv() (*PaymentRequest, error) {
	m := new(PaymentRequest)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// Server API for Taxi service

type TaxiServer interface {
	// Ask taxi for Price
	AskTaxiForPrice(context.Context, *Enviroment) (*Price, error)
	// Accept price from Taxi
	AcceptPrice(context.Context, *Enviroment) (*AckNackResponse, error)
	// Returns a stream of PaymentRequests to Customer
	PaymentRequestStream(*Enviroment, Taxi_PaymentRequestStreamServer) error
}

func RegisterTaxiServer(s *grpc.Server, srv TaxiServer) {
	s.RegisterService(&_Taxi_serviceDesc, srv)
}

func _Taxi_AskTaxiForPrice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Enviroment)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TaxiServer).AskTaxiForPrice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/taxi_grpc_api.Taxi/AskTaxiForPrice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TaxiServer).AskTaxiForPrice(ctx, req.(*Enviroment))
	}
	return interceptor(ctx, in, info, handler)
}

func _Taxi_AcceptPrice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Enviroment)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TaxiServer).AcceptPrice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/taxi_grpc_api.Taxi/AcceptPrice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TaxiServer).AcceptPrice(ctx, req.(*Enviroment))
	}
	return interceptor(ctx, in, info, handler)
}

func _Taxi_PaymentRequestStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Enviroment)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(TaxiServer).PaymentRequestStream(m, &taxiPaymentRequestStreamServer{stream})
}

type Taxi_PaymentRequestStreamServer interface {
	Send(*PaymentRequest) error
	grpc.ServerStream
}

type taxiPaymentRequestStreamServer struct {
	grpc.ServerStream
}

func (x *taxiPaymentRequestStreamServer) Send(m *PaymentRequest) error {
	return x.ServerStream.SendMsg(m)
}

var _Taxi_serviceDesc = grpc.ServiceDesc{
	ServiceName: "taxi_grpc_api.Taxi",
	HandlerType: (*TaxiServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AskTaxiForPrice",
			Handler:    _Taxi_AskTaxiForPrice_Handler,
		},
		{
			MethodName: "AcceptPrice",
			Handler:    _Taxi_AcceptPrice_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "PaymentRequestStream",
			Handler:       _Taxi_PaymentRequestStream_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "taxi_api.proto",
}

func init() { proto.RegisterFile("taxi_api.proto", fileDescriptor_taxi_api_73c5d8ff1f7b6cda) }

var fileDescriptor_taxi_api_73c5d8ff1f7b6cda = []byte{
	// 636 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x54, 0xc1, 0x4e, 0xdb, 0x40,
	0x10, 0x8d, 0x21, 0x01, 0x67, 0x00, 0xe3, 0x0e, 0x6e, 0x31, 0x54, 0xad, 0x82, 0x51, 0x51, 0x94,
	0x43, 0x44, 0x41, 0x42, 0x3d, 0x55, 0x4a, 0x55, 0x5a, 0xb5, 0x52, 0x4b, 0x64, 0xe8, 0x11, 0xa1,
	0xed, 0x32, 0x82, 0x95, 0xe3, 0xb5, 0xbb, 0xde, 0x50, 0xf8, 0xa5, 0x9e, 0xfa, 0x65, 0xfd, 0x86,
	0xca, 0xeb, 0x40, 0x6c, 0x13, 0x8a, 0xd4, 0x53, 0x32, 0xf3, 0xde, 0xdb, 0x79, 0x33, 0xe3, 0x5d,
	0x70, 0x34, 0xbb, 0x16, 0x67, 0x2c, 0x15, 0xfd, 0x54, 0x25, 0x3a, 0xc1, 0x15, 0x13, 0x5f, 0xa8,
	0x94, 0xe7, 0xc9, 0xc0, 0x05, 0xe7, 0x30, 0x4e, 0xf5, 0xcd, 0x90, 0x29, 0x16, 0x93, 0x26, 0x15,
	0x7c, 0x84, 0xd5, 0x01, 0x8f, 0xbe, 0x32, 0x1e, 0x85, 0x94, 0xa5, 0x89, 0xcc, 0x08, 0x7d, 0x58,
	0x64, 0x3c, 0x92, 0x8c, 0x47, 0xbe, 0xd5, 0xb1, 0xba, 0x76, 0x78, 0x1b, 0xe2, 0x26, 0xd8, 0x3c,
	0x89, 0x63, 0x92, 0x3a, 0xf3, 0xe7, 0x3a, 0x56, 0xb7, 0x1d, 0xde, 0xc5, 0xc1, 0x29, 0xc0, 0xa1,
	0xbc, 0x12, 0x2a, 0xc9, 0x43, 0x3c, 0x02, 0xf7, 0x84, 0x32, 0x7d, 0xa4, 0x86, 0x2a, 0x39, 0x1f,
	0x73, 0x2d, 0x12, 0x69, 0x0e, 0x73, 0xf6, 0xb6, 0xfb, 0x15, 0x4b, 0xfd, 0x29, 0x6d, 0x2a, 0x0f,
	0xef, 0x89, 0x83, 0x5f, 0x4d, 0x70, 0x86, 0xec, 0xc6, 0xa0, 0xf4, 0x63, 0x4c, 0x99, 0xc6, 0x37,
	0xb0, 0x3e, 0x12, 0x17, 0x97, 0x5a, 0x0a, 0x79, 0x51, 0x85, 0x4c, 0xa9, 0x76, 0xf8, 0x10, 0x8c,
	0xbb, 0xe0, 0x65, 0x29, 0xd1, 0xf9, 0x19, 0x8b, 0x93, 0xb1, 0xd4, 0x67, 0x19, 0xd3, 0x49, 0x76,
	0x29, 0x4c, 0x4f, 0xf3, 0x21, 0x1a, 0x6c, 0x60, 0xa0, 0xe3, 0x02, 0xc1, 0xb7, 0xf0, 0x9c, 0x71,
	0x4e, 0x23, 0x52, 0x2c, 0xb7, 0x53, 0x17, 0xce, 0x1b, 0xe1, 0x46, 0x99, 0x52, 0xd5, 0xf7, 0x61,
	0x4d, 0x8b, 0x98, 0xea, 0xba, 0xa6, 0xd1, 0x3d, 0xc9, 0xa1, 0x2a, 0xbf, 0x0b, 0x6e, 0xd5, 0x21,
	0x45, 0x7e, 0xab, 0x63, 0x75, 0xe7, 0x42, 0xa7, 0xec, 0x8e, 0x22, 0x3c, 0x80, 0xf5, 0x99, 0xce,
	0x28, 0xf2, 0x17, 0x8c, 0xe0, 0xe9, 0x0c, 0x57, 0x14, 0xe1, 0x0e, 0xac, 0x56, 0x1c, 0x51, 0xe4,
	0x2f, 0x1a, 0xfe, 0x4a, 0xc9, 0x0d, 0x45, 0xf9, 0xac, 0x74, 0xa2, 0xd9, 0xa8, 0x6e, 0xdd, 0x2e,
	0x66, 0x65, 0xb0, 0x7b, 0xde, 0xab, 0x0a, 0x8a, 0xfc, 0x76, 0xe1, 0xbd, 0xcc, 0xa6, 0x08, 0xb7,
	0x61, 0xa5, 0xe8, 0x32, 0x25, 0xc5, 0x49, 0x6a, 0x1f, 0x3a, 0x56, 0xb7, 0x15, 0x2e, 0x9b, 0xe4,
	0xb0, 0xc8, 0xe1, 0x6b, 0xf0, 0x2a, 0x0d, 0xde, 0x72, 0x97, 0x0c, 0x77, 0xad, 0x8c, 0x4d, 0x24,
	0xc1, 0xef, 0x39, 0x68, 0x0d, 0x95, 0xe0, 0xff, 0xf9, 0x2d, 0xa3, 0x07, 0x2d, 0x63, 0x61, 0xb2,
	0xd7, 0x22, 0xc0, 0x00, 0x96, 0xcb, 0xc5, 0x26, 0xcb, 0xab, 0xe4, 0x10, 0xa1, 0x99, 0x8f, 0xcf,
	0xec, 0x6a, 0x3e, 0x34, 0xff, 0x71, 0x1f, 0xec, 0xfc, 0x77, 0x2c, 0x85, 0x36, 0x2b, 0x71, 0xf6,
	0xd6, 0xeb, 0x77, 0x40, 0xc4, 0xf4, 0x4d, 0x0a, 0x1d, 0xde, 0x11, 0xf1, 0x00, 0x9e, 0xa5, 0x95,
	0x8f, 0xf6, 0x93, 0xd4, 0xa4, 0xae, 0xd8, 0xc8, 0x6c, 0xa9, 0x15, 0x3e, 0x80, 0xe2, 0x01, 0xb4,
	0xd3, 0xbc, 0x73, 0x53, 0xcd, 0x36, 0xd5, 0xfc, 0x5a, 0x35, 0x33, 0x19, 0x53, 0x6e, 0x4a, 0xed,
	0xed, 0x82, 0x37, 0xeb, 0x26, 0xa2, 0x0d, 0xcd, 0x3c, 0xef, 0x36, 0xd0, 0x01, 0x98, 0xde, 0x47,
	0xd7, 0xea, 0x6d, 0x41, 0xfb, 0xee, 0x24, 0xf4, 0xc0, 0x9d, 0xac, 0x7f, 0x48, 0xea, 0x98, 0x78,
	0x22, 0xcf, 0xdd, 0x46, 0xef, 0x14, 0xec, 0xdb, 0xd6, 0xf0, 0x15, 0x6c, 0x15, 0xf9, 0xec, 0x1d,
	0xe9, 0x9f, 0x44, 0x72, 0x72, 0x27, 0x4b, 0x4d, 0x64, 0x6e, 0x03, 0x7b, 0xb0, 0xf3, 0x45, 0x8c,
	0x46, 0xe2, 0x71, 0xae, 0xb5, 0xf7, 0xc7, 0x82, 0xe6, 0x09, 0xbb, 0x16, 0xf8, 0x1e, 0x56, 0x07,
	0x59, 0x94, 0xff, 0xfd, 0x90, 0xa8, 0x62, 0xf1, 0x1b, 0xb5, 0xa6, 0xa7, 0x2d, 0x6d, 0x7a, 0xb3,
	0xe6, 0x11, 0x34, 0xf0, 0x33, 0x2c, 0x0d, 0x38, 0xa7, 0x54, 0x3f, 0x7a, 0xc2, 0xcb, 0x1a, 0x54,
	0x7b, 0x41, 0x83, 0x06, 0x9e, 0x80, 0x57, 0x7d, 0x73, 0x8e, 0xb5, 0x22, 0x16, 0xff, 0xeb, 0xd0,
	0x17, 0x75, 0x5b, 0x15, 0x7d, 0xd0, 0xd8, 0xb5, 0xbe, 0x2f, 0x98, 0x47, 0x7d, 0xff, 0x6f, 0x00,
	0x00, 0x00, 0xff, 0xff, 0xb5, 0x4b, 0x83, 0x9b, 0xe6, 0x05, 0x00, 0x00,
}
